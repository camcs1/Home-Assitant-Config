- id: wled_speed
  alias: wled_speed
  trigger:
  - entity_id: input_number.ledspeed
    platform: state
  condition: []
  action:
  - data_template:
      topic: wled/all/api
      payload: SX={{ states('input_number.ledspeed') | int }}
    service: mqtt.publish
- id: wled_intensity
  alias: wled_intensity
  trigger:
  - entity_id: input_number.ledintensity
    platform: state
  condition: []
  action:
  - data_template:
      topic: wled/all/api
      payload: IX={{ states('input_number.ledintensity') | int }}
    service: mqtt.publish
- id: wled_palette
  alias: WLED Palette
  trigger:
  - platform: state
    entity_id: input_select.wled_palette_list
  condition: []
  action:
  - service: mqtt.publish
    data_template:
      topic: wled/all/api
      payload: '{{ states(''input_select.wled_palette_list'') }}'
- id: wled_presets
  alias: WLED Presets
  trigger:
  - platform: state
    entity_id: input_select.wled_presets
  condition: []
  action:
  - service: mqtt.publish
    data_template:
      topic: wled/all/api
      payload: '{{ states(''input_select.wled_presets'') }}'
- alias: MiLight Forwarder
  initial_state: true
  trigger:
    platform: mqtt
    topic: milight/updates/0x1A75/rgb_cct/+
  action:
  - service: mqtt.publish
    data_template:
      topic: milight/commands/0x1B75/rgb_cct/{{ trigger.topic.split('/')[4] }}
      payload_template: '{{ trigger.payload }}

        '
  id: 5326fdd5087a4adcb7758366a55fcbe5
- alias: MilightAll
  initial_state: true
  trigger:
    platform: mqtt
    topic: milight/updates/0x1A75/rgb_cct/0
  action:
  - service: mqtt.publish
    data_template:
      topic: milight/commands/0x1B75/rgb_cct/1
      payload_template: '{{ trigger.payload }}

        '
  - service: mqtt.publish
    data_template:
      topic: milight/commands/0x1B75/rgb_cct/2
      payload_template: '{{ trigger.payload }}

        '
  - service: mqtt.publish
    data_template:
      topic: milight/commands/0x1B75/rgb_cct/3
      payload_template: '{{ trigger.payload }}

        '
  - service: mqtt.publish
    data_template:
      topic: milight/commands/0x1B75/rgb_cct/4
      payload_template: '{{ trigger.payload }}

        '
  id: bfba1df920894ffaa8525d3147c854ed
- alias: MiLight Wall Remote
  initial_state: true
  trigger:
    platform: mqtt
    topic: milight/updates/0x6B5F/rgb_cct/+
  action:
  - service: mqtt.publish
    data_template:
      topic: milight/commands/0x1B75/rgb_cct/{{ trigger.topic.split('/')[4] }}
      payload_template: '{{ trigger.payload }}

        '
  id: e51a5125247145c697190b3470a4e586
- alias: MilightWallAll
  initial_state: true
  trigger:
    platform: mqtt
    topic: milight/updates/0x6B5F/rgb_cct/0
  action:
  - service: mqtt.publish
    data_template:
      topic: milight/commands/0x1B75/rgb_cct/1
      payload_template: '{{ trigger.payload }}

        '
  - service: mqtt.publish
    data_template:
      topic: milight/commands/0x1B75/rgb_cct/2
      payload_template: '{{ trigger.payload }}

        '
  - service: mqtt.publish
    data_template:
      topic: milight/commands/0x1B75/rgb_cct/3
      payload_template: '{{ trigger.payload }}

        '
  - service: mqtt.publish
    data_template:
      topic: milight/commands/0x1B75/rgb_cct/4
      payload_template: '{{ trigger.payload }}

        '
  id: 4eb35eae47854330b973a335d33409e5
- id: 82c98f55cc1e4c0aa676c7921d3845cb
  alias: Wake me up with bedroom light transition for weekdays
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.time'') == (states.input_datetime.wakeup_time.attributes.timestamp
      | int | timestamp_custom(''%H:%M'', False)) }}'
  condition:
  - condition: state
    entity_id: input_boolean.wakeup_enabled
    state: 'on'
  - condition: or
    conditions:
    - condition: state
      entity_id: input_boolean.wakeup_weekend
      state: 'on'
    - condition: time
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
  - data:
      brightness: 255
      transition: 600
    entity_id: light.milightsselect
    service: light.turn_on
  mode: single
- id: '1590187741446'
  alias: Climate Fan On
  description: ''
  trigger:
  - above: '24'
    entity_id: sensor.bedroom_temprature
    platform: numeric_state
  condition:
  - condition: state
    entity_id: input_boolean.climate_overide
    state: 'off'
  action:
  - data: {}
    entity_id: switch.big_fan
    service: switch.turn_on
- id: '1590272486976'
  alias: 'Climate Test Off '
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /10
  condition:
  - condition: and
    conditions:
    - below: '25'
      condition: numeric_state
      entity_id: sensor.bedroom_temprature
    - condition: state
      entity_id: input_boolean.climate_overide
      state: 'on'
    - condition: state
      entity_id: switch.big_fan
      state: 'on'
  action:
  - data: {}
    entity_id: switch.big_fan
    service: switch.turn_off
- id: '1590272706870'
  alias: Climate Test On
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /30
  condition:
  - condition: and
    conditions:
    - above: '25'
      condition: numeric_state
      entity_id: sensor.bedroom_temprature
    - condition: state
      entity_id: input_boolean.climate_overide
      state: 'on'
  action:
  - data: {}
    entity_id: switch.big_fan
    service: switch.turn_on
- id: '1595783626201'
  alias: PS4 Audio Switcher
  description: ''
  trigger:
  - platform: time_pattern
    seconds: '10'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: media_player.playstation_4
      state: idle
    - condition: state
      entity_id: media_player.playstation_4
      state: playing
  action:
  - data: {}
    entity_id: switch.ps4audio
    service: switch.turn_on
  mode: single
- id: '1595784064306'
  alias: TV Audio Switcher
  description: ''
  trigger:
  - platform: time_pattern
    seconds: '10'
  condition:
  - condition: state
    entity_id: media_player.playstation_4
    state: standby
  action:
  - data: {}
    entity_id: switch.ps4audio
    service: switch.turn_off
  mode: single
- id: '1597163776632'
  alias: Temprature Stable Off
  description: ''
  trigger:
  - entity_id: binary_sensor.temp_rising
    from: 'off'
    platform: state
    to: 'on'
  - entity_id: binary_sensor.temp_falling
    from: 'off'
    platform: state
    to: 'on'
  condition: []
  action:
  - data: {}
    entity_id: input_boolean.temprature_stable
    service: input_boolean.turn_off
  mode: single
- id: '1597187359729'
  alias: stable off
  description: ''
  trigger:
  - platform: time_pattern
    seconds: '30'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.temp_falling
      state: 'on'
    - condition: state
      entity_id: binary_sensor.temp_rising
      state: 'on'
  action:
  - data: {}
    entity_id: input_boolean.temprature_stable
    service: input_boolean.turn_off
  mode: single
- id: '1597187362134'
  alias: stable off
  description: ''
  trigger:
  - platform: time_pattern
    seconds: '30'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.temp_falling
      state: 'on'
    - condition: state
      entity_id: binary_sensor.temp_rising
      state: 'on'
  action:
  - data: {}
    entity_id: input_boolean.temprature_stable
    service: input_boolean.turn_off
  mode: single
- id: '1597277741425'
  alias: Temp Rising Notify Iphone
  description: ''
  trigger:
  - entity_id: binary_sensor.temp_rising
    for: '60'
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - after: '13:00'
    before: 03:00
    condition: time
  action:
  - data:
      data:
        group: heat
      message: Bedroom Temprature {{ states.sensor.bedroom_temprature.state}}
      title: Temprature Rising
    service: notify.mobile_app_iphone
  - delay: '15'
  mode: single
- id: '1597368073343'
  alias: Temprature Stable On
  description: ''
  trigger:
  - entity_id: binary_sensor.temp_rising
    from: 'on'
    platform: state
    to: 'off'
  - entity_id: binary_sensor.temp_falling
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data: {}
    entity_id: input_boolean.temprature_stable
    service: input_boolean.turn_on
  mode: single
